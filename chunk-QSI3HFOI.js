import{a as _}from"./chunk-IZ7UM5CL.js";import{B as R}from"./chunk-REOVWAHI.js";import{$ as P,Ea as u,Oc as c,fa as E,g as d,q as p}from"./chunk-BEPULU6C.js";import{e as l}from"./chunk-JKOY2XUY.js";var I=class m{http=E(R);config=E(_);userPermissionsSubject=new d(null);loadingSubject=new d(!1);userPermissions=u(null);isLoading=u(!1);allPermissions=c(()=>this.userPermissions()?.allPermissions||[]);permissionNames=c(()=>this.allPermissions().map(s=>s.name));activeRoles=c(()=>{let s=this.userPermissions();return s?s.roles.filter(e=>e.is_active?e.expires_at?new Date(e.expires_at)>new Date:!0:!1):[]});userPermissions$=this.userPermissionsSubject.asObservable();isLoading$=this.loadingSubject.asObservable();constructor(){this.userPermissionsSubject.subscribe(s=>{this.userPermissions.set(s),this.persistPermissions(s)}),this.loadingSubject.subscribe(s=>{this.isLoading.set(s)}),this.restorePermissions()}getApiUrl(s){return this.config.getApiUrl(`/admin/roles${s}`)}loadUserPermissions(s){return l(this,null,function*(){try{this.loadingSubject.next(!0),console.log("Loading permissions for user:",s);try{let[e,r]=yield Promise.all([this.http.get(`${this.config.getApiUrl("/roles/my-roles")}`).toPromise(),this.http.get(`${this.config.getApiUrl("/roles/my-permissions")}`).toPromise()]);if(e?.success&&r?.success){let n={userId:s,roles:e.data.map(i=>({_id:i.role_id._id||i.role_id,name:i.role_id.name||"unknown",display_name:i.role_id.display_name,permissions:i.role_id.permissions||[],is_active:i.is_active,expires_at:i.expires_at})),directPermissions:[],allPermissions:r.data};console.log("Loaded user permissions from admin API:",n),this.userPermissionsSubject.next(n);return}}catch(e){if(console.warn("Failed to load from admin API (likely permission issue):",e.status),e.status===403){console.log("User does not have admin access, creating basic permissions structure");let r={userId:s,roles:[],directPermissions:[],allPermissions:[]};console.log("Created basic permissions for non-admin user:",r),this.userPermissionsSubject.next(r);return}throw e}console.error("Admin API returned invalid responses"),this.userPermissionsSubject.next(null)}catch(e){console.error("Error loading user permissions:",e),this.userPermissionsSubject.next(null)}finally{this.loadingSubject.next(!1)}})}hasPermission(s){return this.permissionNames().includes(s)}hasAnyPermission(s){let e=this.permissionNames();return s.some(r=>e.includes(r))}hasAllPermissions(s){let e=this.permissionNames();return s.every(r=>e.includes(r))}hasRole(s){return this.activeRoles().some(r=>r.name===s||r.display_name===s)}hasAnyRole(s){let e=this.activeRoles();return s.some(r=>e.some(n=>n.name===r||n.display_name===r))}checkPermissions(s){return s.every(e=>{if(typeof e.permission=="string")return this.hasPermission(e.permission);let r=Array.isArray(e.permission)?e.permission:[e.permission];return e.requireAll?this.hasAllPermissions(r):this.hasAnyPermission(r)})}canAccess(s,e){let r=e?`${s}.${e}`:s;return this.hasPermission(r)}hasPermission$(s){return this.userPermissions$.pipe(p(e=>e?e.allPermissions.some(r=>r.name===s):!1))}hasRole$(s){return this.userPermissions$.pipe(p(e=>e?e.roles.some(r=>(r.name===s||r.display_name===s)&&r.is_active&&(!r.expires_at||new Date(r.expires_at)>new Date)):!1))}getPermissionsByCategory(){let s=this.allPermissions(),e={};return s.forEach(r=>{let n=r.category||"General";e[n]||(e[n]=[]),e[n].push(r)}),e}persistPermissions(s){if(!(typeof window>"u"||!localStorage))try{s?(localStorage.setItem("userPermissions",JSON.stringify(s)),localStorage.setItem("permissionsTimestamp",Date.now().toString()),console.log("Permissions persisted to localStorage")):(localStorage.removeItem("userPermissions"),localStorage.removeItem("permissionsTimestamp"),console.log("Permissions cleared from localStorage"))}catch(e){console.warn("Failed to persist permissions to localStorage:",e)}}restorePermissions(){if(!(typeof window>"u"||!localStorage))try{let s=localStorage.getItem("userPermissions"),e=localStorage.getItem("permissionsTimestamp");if(s&&e){let r=Date.now()-parseInt(e),n=24*60*60*1e3;if(r<n){let i=JSON.parse(s);console.log("Restored permissions from localStorage:",i),this.userPermissionsSubject.next(i);return}else console.log("Stored permissions are too old, clearing them"),this.clearStoredPermissions()}else console.log("No stored permissions found in localStorage")}catch(s){console.warn("Failed to restore permissions from localStorage:",s),this.clearStoredPermissions()}}clearStoredPermissions(){localStorage.removeItem("userPermissions"),localStorage.removeItem("permissionsTimestamp")}clearPermissions(){this.userPermissionsSubject.next(null),this.clearStoredPermissions()}refreshPermissions(s){return l(this,null,function*(){yield this.loadUserPermissions(s)})}forceRefreshPermissions(s){return l(this,null,function*(){this.clearStoredPermissions(),yield this.loadUserPermissions(s)})}debugAuthState(){let s=this.permissionNames(),e=this.activeRoles(),r=this.userPermissions();console.group("\u{1F50D} Authorization Debug Information"),console.log("\u{1F4CA} Current User Permissions:",r),console.log("\u{1F3AD} Active Roles:",e),console.log("\u{1F510} All Permissions:",s),console.log("\u{1F451} Has Admin Access:",this.hasAdminAccess()),console.log("\u{1F194} User ID:",r?.userId),console.group("\u{1F50D} Role Details"),e.forEach(i=>{console.log(`Role: ${i.name} (${i.display_name})`),console.log("  Permissions:",i.permissions?.map(a=>typeof a=="string"?a:a?.name))}),console.groupEnd(),console.group("\u{1F50D} Admin Permission Check"),["dashboard.read","users.read","users.create","users.update","users.delete","businesses.read","businesses.approve","businesses.suspend","services.read","services.approve","services.reject","categories.read","categories.create","categories.update","projects.read","projects.approve","projects.reject","reviews.read","reviews.moderate","reviews.flag","transactions.read","transactions.refund","transactions.cancel","reports.read","analytics.read","roles.read","roles.create","roles.update","roles.delete","permissions.read","permissions.create","permissions.update","settings.read","audit.read"].forEach(i=>{let a=s.includes(i);console.log(`${a?"\u2705":"\u274C"} ${i}`)}),console.groupEnd(),console.groupEnd()}hasAdminAccess=c(()=>{let s=this.permissionNames(),e=this.activeRoles(),r=["super_admin","admin","system_admin","moderator"],n=e.some(o=>r.includes(o.name.toLowerCase())||r.includes(o.display_name?.toLowerCase()||"")),i=["dashboard.read","users.read","users.create","users.update","users.delete","businesses.read","businesses.approve","businesses.suspend","services.read","services.approve","services.reject","categories.read","categories.create","categories.update","projects.read","projects.approve","projects.reject","reviews.read","reviews.moderate","reviews.flag","transactions.read","transactions.refund","transactions.cancel","reports.read","analytics.read","roles.read","roles.create","roles.update","roles.delete","permissions.read","permissions.create","permissions.update","settings.read","audit.read"],a=i.some(o=>s.includes(o)),S=e.some(o=>!o.permissions||!Array.isArray(o.permissions)?!1:o.permissions.some(t=>typeof t=="string"?i.includes(t):t&&typeof t=="object"&&"name"in t?i.includes(t.name):!1)),g=n||a||S;return console.log("Admin access check:",{permissions:s.length,roles:e.map(o=>({name:o.name,display_name:o.display_name,permissions:o.permissions?.length||0,permissionDetails:o.permissions?.map(t=>typeof t=="string"?t:t?.name)})),hasSystemAdminRole:n,hasAdminPermission:a,hasCustomRoleWithAdminPerms:S,hasAccess:g,allPermissions:s,adminPermissionsCheck:i.map(o=>({permission:o,hasIt:s.includes(o)}))}),g});static PERMISSIONS={USERS_VIEW:"users.read",USERS_CREATE:"users.create",USERS_EDIT:"users.update",USERS_DELETE:"users.delete",USERS_SUSPEND:"users.suspend",USERS_EXPORT:"users.export",BUSINESS_VIEW:"businesses.read",BUSINESS_CREATE:"businesses.create",BUSINESS_EDIT:"businesses.update",BUSINESS_DELETE:"businesses.delete",BUSINESS_APPROVE:"businesses.approve",BUSINESS_REJECT:"businesses.reject",BUSINESS_SUSPEND:"businesses.suspend",BUSINESS_EXPORT:"businesses.export",SERVICES_VIEW:"services.read",SERVICES_CREATE:"services.create",SERVICES_EDIT:"services.update",SERVICES_DELETE:"services.delete",SERVICES_APPROVE:"services.approve",SERVICES_REJECT:"services.reject",SERVICES_EXPORT:"services.export",CATEGORIES_VIEW:"categories.read",CATEGORIES_CREATE:"categories.create",CATEGORIES_EDIT:"categories.update",CATEGORIES_DELETE:"categories.delete",CATEGORIES_REORDER:"categories.reorder",CATEGORIES_EXPORT:"categories.export",PROJECTS_VIEW:"projects.read",PROJECTS_CREATE:"projects.create",PROJECTS_EDIT:"projects.update",PROJECTS_DELETE:"projects.delete",PROJECTS_APPROVE:"projects.approve",PROJECTS_REJECT:"projects.reject",PROJECTS_EXPORT:"projects.export",REVIEWS_VIEW:"reviews.read",REVIEWS_CREATE:"reviews.create",REVIEWS_EDIT:"reviews.update",REVIEWS_DELETE:"reviews.delete",REVIEWS_MODERATE:"reviews.moderate",REVIEWS_FLAG:"reviews.flag",REVIEWS_EXPORT:"reviews.export",TRANSACTIONS_VIEW:"transactions.read",TRANSACTIONS_CREATE:"transactions.create",TRANSACTIONS_EDIT:"transactions.update",TRANSACTIONS_DELETE:"transactions.delete",TRANSACTIONS_REFUND:"transactions.refund",TRANSACTIONS_CANCEL:"transactions.cancel",TRANSACTIONS_EXPORT:"transactions.export",REPORTS_VIEW:"reports.read",REPORTS_CREATE:"reports.create",REPORTS_EDIT:"reports.update",REPORTS_DELETE:"reports.delete",REPORTS_EXPORT:"reports.export",ANALYTICS_VIEW:"analytics.read",ANALYTICS_ADVANCED:"analytics.advanced",ROLES_VIEW:"roles.read",ROLES_CREATE:"roles.create",ROLES_EDIT:"roles.update",ROLES_DELETE:"roles.delete",ROLES_ASSIGN:"roles.assign",PERMISSIONS_VIEW:"permissions.read",PERMISSIONS_CREATE:"permissions.create",PERMISSIONS_EDIT:"permissions.update",PERMISSIONS_DELETE:"permissions.delete",ADMIN_ACCESS:"dashboard.read",ADMIN_DASHBOARD:"dashboard.read",SETTINGS_VIEW:"settings.read",SETTINGS_EDIT:"settings.update",AUDIT_VIEW:"audit.read",AUDIT_EXPORT:"audit.export",BUSINESS_MANAGE:"businesses.update",USERS_MANAGE:"users.update"};static ROLES={SUPER_ADMIN:"super_admin",ADMIN:"admin",MODERATOR:"moderator",USER:"user",BUSINESS_OWNER:"business_owner",BUSINESS_MANAGER:"business_manager"};static \u0275fac=function(e){return new(e||m)};static \u0275prov=P({token:m,factory:m.\u0275fac,providedIn:"root"})};export{I as a};

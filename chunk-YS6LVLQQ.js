import{a as m}from"./chunk-V2EJJXO4.js";import{e as f}from"./chunk-BOFJA5JL.js";import{Ba as o,Hc as u,Z as g,da as i,g as l,k as c,kd as h,p as d}from"./chunk-QKXNVIL2.js";import{d as r}from"./chunk-QEZ3K4DX.js";var p=class n{http=i(h);router=i(f);config=i(m);API_URL=this.config.apiBaseUrl;TOKEN_KEY=this.config.tokenKey;USER_KEY=this.config.userKey;loading=o(!1);userSubject=new l(this.getUserFromStorage());tokenSubject=new l(this.getTokenFromStorage());user$=this.userSubject.asObservable();token$=this.tokenSubject.asObservable();isAuthenticated$=this.user$.pipe(d(s=>!!s));_user=o(this.getUserFromStorage());_isAuthenticated=o(!!this.getUserFromStorage());user=u(()=>this._user());isAuthenticated=u(()=>this._isAuthenticated());get currentUser(){return this._user()}get loading$(){return c(this.loading())}getTokenFromStorage(){return typeof window<"u"?localStorage.getItem(this.TOKEN_KEY):null}getUserFromStorage(){if(typeof window<"u"){let s=localStorage.getItem(this.USER_KEY);return s?JSON.parse(s):null}return null}setAuthData(s,e){typeof window<"u"&&(localStorage.setItem(this.TOKEN_KEY,s),localStorage.setItem(this.USER_KEY,JSON.stringify(e))),this.tokenSubject.next(s),this.userSubject.next(e),this._user.set(e),this._isAuthenticated.set(!0)}clearAuthData(){typeof window<"u"&&(localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_KEY)),this.tokenSubject.next(null),this.userSubject.next(null),this._user.set(null),this._isAuthenticated.set(!1)}getAuthToken(){return this.tokenSubject.value}getAuthHeaders(){let s=this.getAuthToken();return s?{Authorization:`Bearer ${s}`}:{}}signUp(s){return r(this,null,function*(){try{this.loading.set(!0);let e=yield this.http.post(`${this.API_URL}/auth/register`,s).toPromise();return e?.success&&e.data?(this.setAuthData(e.data.access_token,e.data.user),this.config.logIfEnabled("User registered successfully:",e.data.user.email),{data:e.data,error:null}):{data:null,error:new Error("Registration failed")}}catch(e){this.config.errorIfEnabled("SignUp error:",e);let t=e.error?.message||e.message||"Registration failed";return{data:null,error:new Error(t)}}finally{this.loading.set(!1)}})}signIn(s,e){return r(this,null,function*(){try{this.loading.set(!0);let t=yield this.http.post(`${this.API_URL}/auth/login`,{email:s,password:e}).toPromise();return t?.success&&t.data?(this.setAuthData(t.data.access_token,t.data.user),this.config.logIfEnabled("User signed in successfully:",t.data.user.email),{data:t.data,error:null}):{data:null,error:new Error("Login failed")}}catch(t){this.config.errorIfEnabled("SignIn error:",t);let a=t.error?.message||t.message||"Login failed";return{data:null,error:new Error(a)}}finally{this.loading.set(!1)}})}signOut(){return r(this,null,function*(){try{return this.loading.set(!0),this.clearAuthData(),this.config.logIfEnabled("User signed out successfully"),yield this.router.navigate(["/"]),{error:null}}catch(s){return this.config.errorIfEnabled("SignOut error:",s),{error:s}}finally{this.loading.set(!1)}})}updateProfile(s){return r(this,null,function*(){try{if(!this.currentUser)return{data:null,error:new Error("User not authenticated")};let e=yield this.http.put(`${this.API_URL}/users/${this.currentUser._id}`,s,{headers:this.getAuthHeaders()}).toPromise();return e?.success&&e.data?(this.userSubject.next(e.data),this._user.set(e.data),typeof window<"u"&&localStorage.setItem(this.USER_KEY,JSON.stringify(e.data)),this.config.logIfEnabled("Profile updated successfully"),{data:e.data,error:null}):{data:null,error:new Error("Failed to update profile")}}catch(e){return this.config.errorIfEnabled("Update profile error:",e),{data:null,error:e}}})}logout(){this.userSubject.next(null),this.tokenSubject.next(null),this._user.set(null),this._isAuthenticated.set(!1),typeof window<"u"&&(localStorage.removeItem(this.TOKEN_KEY),localStorage.removeItem(this.USER_KEY)),this.config.logIfEnabled("User logged out successfully")}getUserById(s){return r(this,null,function*(){try{let e=yield this.http.get(`${this.API_URL}/users/${s}`,{headers:this.getAuthHeaders()}).toPromise();return e?.success&&e.data?e.data:null}catch(e){return this.config.errorIfEnabled("Get user by ID error:",e),null}})}switchMode(s){return r(this,null,function*(){try{this.loading.set(!0);let e=yield this.http.put(`${this.API_URL}/users/switch-mode`,{user_mode:s},{headers:this.getAuthHeaders()}).toPromise();return e?.success&&e.data?(this.userSubject.next(e.data),this._user.set(e.data),typeof window<"u"&&localStorage.setItem(this.USER_KEY,JSON.stringify(e.data)),this.config.logIfEnabled(`User mode switched to ${s} successfully`),{data:e.data,error:null}):{data:null,error:new Error("Failed to switch user mode")}}catch(e){return this.config.errorIfEnabled("Switch mode error:",e),{data:null,error:e}}finally{this.loading.set(!1)}})}forgotPassword(s){return r(this,null,function*(){try{this.loading.set(!0);let e=yield this.http.post(`${this.API_URL}/auth/forgot-password`,{email:s}).toPromise();return e?.success?(this.config.logIfEnabled("Password reset email sent successfully"),{success:!0,message:e.data?.message||e.message||"Password reset email sent successfully"}):{success:!1,message:e?.message||"Failed to send password reset email"}}catch(e){return this.config.errorIfEnabled("Forgot password error:",e),{success:!1,message:e.error?.message||e.message||"Failed to send password reset email"}}finally{this.loading.set(!1)}})}verifyResetToken(s){return r(this,null,function*(){try{let e=yield this.http.get(`${this.API_URL}/auth/verify-reset-token?token=${s}`).toPromise();return e?.success?{success:!0,message:e.data?.message||"Token is valid",data:{email:e.data?.email||""}}:{success:!1,message:e?.message||"Invalid or expired token"}}catch(e){return this.config.errorIfEnabled("Verify reset token error:",e),{success:!1,message:e.error?.message||e.message||"Invalid or expired token"}}})}resetPassword(s,e,t){return r(this,null,function*(){try{this.loading.set(!0);let a=yield this.http.post(`${this.API_URL}/auth/reset-password`,{token:s,newPassword:e,confirmPassword:t}).toPromise();return a?.success?(this.config.logIfEnabled("Password reset successfully"),{success:!0,message:a.data?.message||a.message||"Password reset successfully"}):{success:!1,message:a?.message||"Failed to reset password"}}catch(a){return this.config.errorIfEnabled("Reset password error:",a),{success:!1,message:a.error?.message||a.message||"Failed to reset password"}}finally{this.loading.set(!1)}})}verifyEmail(s){return r(this,null,function*(){try{this.loading.set(!0);let e=yield this.http.get(`${this.API_URL}/auth/verify-email?token=${s}`).toPromise();return e?.success?(this.config.logIfEnabled("Email verified successfully"),{success:!0,message:e.message||"Email verified successfully",data:e.data}):{success:!1,message:e?.message||"Failed to verify email"}}catch(e){return this.config.errorIfEnabled("Email verification error:",e),{success:!1,message:e.error?.message||e.message||"Email verification failed"}}finally{this.loading.set(!1)}})}resendEmailVerification(s){return r(this,null,function*(){try{this.loading.set(!0);let e=yield this.http.post(`${this.API_URL}/auth/resend-verification`,{email:s}).toPromise();return e?.success?(this.config.logIfEnabled("Verification email sent successfully"),{success:!0,message:e.data?.message||e.message||"Verification email sent"}):{success:!1,message:e?.message||"Failed to send verification email"}}catch(e){return this.config.errorIfEnabled("Resend verification error:",e),{success:!1,message:e.error?.message||e.message||"Failed to send verification email"}}finally{this.loading.set(!1)}})}static \u0275fac=function(e){return new(e||n)};static \u0275prov=g({token:n,factory:n.\u0275fac,providedIn:"root"})};export{p as a};
